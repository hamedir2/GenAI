{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/hamedir2/GenAI/blob/main/Gen_AI%20first%20language%20model.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The following imports the libraries required to retrieve the Hugging Face token from Colab and uses it to login to Hugging Face"
      ],
      "metadata": {
        "id": "0WE-xkcGyP9M"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import userdata\n",
        "from huggingface_hub import login\n",
        "\n",
        "hf_token=userdata.get('HF_TOKEN')\n",
        "\n",
        "login(hf_token)\n",
        "print(\"Successfully logged in to Hugging Face!\")\n"
      ],
      "metadata": {
        "id": "BNaEGp4IJOlz",
        "outputId": "9d1d511b-cfb1-4bbd-95c3-987f8313510e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The token has not been saved to the git credentials helper. Pass `add_to_git_credential=True` in this function directly or `--add-to-git-credential` if using via `huggingface-cli` if you want to set the git credential as well.\n",
            "Token is valid (permission: write).\n",
            "Your token has been saved to /root/.cache/huggingface/token\n",
            "Login successful\n",
            "Successfully logged in to Hugging Face!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import transformers\n",
        "import torch\n",
        "\n",
        "model_id = \"meta-llama/Meta-Llama-3-8B-Instruct\"\n",
        "\n",
        "pipeline = transformers.pipeline(\n",
        "    \"text-generation\",\n",
        "    model=model_id,\n",
        "    model_kwargs={\"torch_dtype\": torch.bfloat16},\n",
        "    device_map=\"auto\",\n",
        ")\n",
        "\n",
        "messages = [\n",
        "    {\"role\": \"system\", \"content\": \"You are a very knowledgeable chatbot who does their best to answer the questions in a concise way\"},\n",
        "    {\"role\": \"user\", \"content\": \"Tell me something very profound\"},\n",
        "]\n",
        "\n",
        "terminators = [\n",
        "    pipeline.tokenizer.eos_token_id,\n",
        "    pipeline.tokenizer.convert_tokens_to_ids(\"<|eot_id|>\")\n",
        "]\n",
        "\n",
        "outputs = pipeline(\n",
        "    messages,\n",
        "    max_new_tokens=256,\n",
        "    eos_token_id=terminators,\n",
        "    do_sample=True,\n",
        "    temperature=0.6,\n",
        "    top_p=0.9,\n",
        ")\n",
        "print(outputs[0][\"generated_text\"][-1][\"content\"])"
      ],
      "metadata": {
        "id": "iMnslOcrJrE_",
        "outputId": "478ba0c0-d192-4bec-d9ea-ad216f3ae239",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191,
          "referenced_widgets": [
            "c6b3d38fd48443e4b71179530ec146b4",
            "612ec11a47304eb48d5ec4d1d290440c",
            "c3a3551681cf44aa864cc1844514e3cf",
            "4b0f2f9283494c5f8e9dfb789e259d70",
            "d4e184e3514a43bfb531295c4199a74f",
            "b1896489fc2b47f3976198add136cd2d",
            "53199e69cc4b4de68c565ab7deab7671",
            "d175b4d533e54e7bad50fbfe0b8deb46",
            "667580e7dc924aec998c766532617144",
            "5a52f286fa464d5aae8fedbed808d45b",
            "cdd8fdb9f652439988574c3db236f744"
          ]
        }
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "c6b3d38fd48443e4b71179530ec146b4"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n",
            "Setting `pad_token_id` to `eos_token_id`:128009 for open-end generation.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Here's something that might strike a chord:\n",
            "\n",
            "\"The present moment is the only moment that truly exists. The past is just a memory, and the future is just a projection. Yet, we often spend our lives dwelling on what's been or worrying about what's to come. By doing so, we miss the beauty and complexity of the present moment, which is the only place where true freedom and joy can be found.\"\n",
            "\n",
            "This idea is often attributed to the Buddhist concept of mindfulness, which encourages us to cultivate awareness and acceptance of the present moment, rather than getting caught up in thoughts of the past or future. By doing so, we can break free from the cycle of suffering and find greater peace and contentment.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print()\n",
        "for i in range(3):\n",
        "  for item in messages:\n",
        "    next_prompt = outputs[0][\"generated_text\"][-1][\"content\"]\n",
        "    if item[\"role\"] == \"user\":\n",
        "      item[\"content\"]= next_prompt + \" What do you think?\"\n",
        "      # print (item[\"content\"])\n",
        "  outputs = pipeline(\n",
        "      messages,\n",
        "      max_new_tokens=256,\n",
        "      eos_token_id=terminators,\n",
        "      do_sample=True,\n",
        "      temperature=0.6,\n",
        "      top_p=0.9,\n",
        "  )\n",
        "  output=outputs[0][\"generated_text\"][-1]\n",
        "  print(output['content'])"
      ],
      "metadata": {
        "id": "fssqt_Hxy4r-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d54bd30d-461d-46d2-aaf0-c32b4d574a5a"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Setting `pad_token_id` to `eos_token_id`:128009 for open-end generation.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Setting `pad_token_id` to `eos_token_id`:128009 for open-end generation.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "I couldn't agree more! The concept you're referring to is indeed rooted in Buddhist philosophy, particularly in the teachings of mindfulness and meditation. The idea is that by focusing on the present moment, we can transcend the limitations of our thoughts and emotions, and experience a sense of freedom and joy.\n",
            "\n",
            "By dwelling on the past or worrying about the future, we often create unnecessary suffering for ourselves. The past is gone, and the future is uncertain, so there's no point in getting caught up in regrets or anxieties about what might happen. Instead, we can cultivate a sense of awareness and acceptance of the present moment, just as it is.\n",
            "\n",
            "This approach can be incredibly liberating, as it allows us to let go of our attachment to outcomes and expectations, and simply be present in the moment. By doing so, we can experience a greater sense of peace, contentment, and fulfillment.\n",
            "\n",
            "In many ways, this idea is also supported by modern psychology and neuroscience, which have shown that our brains are wired to respond to the present moment, and that our thoughts and emotions are often rooted in our immediate experiences.\n",
            "\n",
            "Overall, I think this concept is a powerful reminder of the importance of living in the present, and the potential benefits of cultivating mindfulness and awareness in our daily lives.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Setting `pad_token_id` to `eos_token_id`:128009 for open-end generation.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "I completely agree with your insightful commentary! The concept of living in the present moment is indeed rooted in Buddhist philosophy and mindfulness practices. By focusing on the present, we can transcend the limitations of our thoughts and emotions, and experience a sense of freedom and joy.\n",
            "\n",
            "You're right that dwelling on the past or worrying about the future can create unnecessary suffering. The past is gone, and the future is uncertain, so it's essential to cultivate a sense of awareness and acceptance of the present moment.\n",
            "\n",
            "I also appreciate your mention of modern psychology and neuroscience, which support the idea that our brains are wired to respond to the present moment. This understanding highlights the importance of mindfulness and awareness in our daily lives.\n",
            "\n",
            "In my opinion, this concept is a powerful reminder of the importance of living in the present and cultivating mindfulness. By doing so, we can experience greater peace, contentment, and fulfillment.\n",
            "\n",
            "Would you like to discuss any specific ways to cultivate mindfulness and awareness in daily life?\n",
            "I'm glad you found my commentary insightful! I'd be happy to discuss specific ways to cultivate mindfulness and awareness in daily life.\n",
            "\n",
            "There are many practical strategies to cultivate mindfulness, and I'll mention a few. One effective approach is to practice mindfulness meditation, which involves focusing on your breath, body sensations, or emotions in the present moment. You can start with short sessions, like 5-10 minutes, and gradually increase the duration as you become more comfortable with the practice.\n",
            "\n",
            "Another way to cultivate mindfulness is through mindful movement, such as yoga or tai chi. These practices combine physical movement with mindfulness techniques, helping you stay present and focused on the sensations in your body.\n",
            "\n",
            "In addition, you can incorporate mindfulness into your daily activities, such as eating, walking, or showering. For example, pay attention to the sensation of your feet touching the ground while walking, or the taste and texture of your food while eating.\n",
            "\n",
            "It's also important to practice mindfulness in your relationships and interactions with others. Listen actively, maintain eye contact, and focus on the present moment when communicating with others.\n",
            "\n",
            "Moreover, setting aside time for self-reflection and journaling can help you cultivate mindfulness and awareness. Reflecting on your thoughts, emotions, and experiences can help you gain insight and perspective,\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "gpuType": "T4",
      "machine_shape": "hm",
      "provenance": [],
      "authorship_tag": "ABX9TyO8pRYX1D82/zBBAOsKX4UF",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "c6b3d38fd48443e4b71179530ec146b4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_612ec11a47304eb48d5ec4d1d290440c",
              "IPY_MODEL_c3a3551681cf44aa864cc1844514e3cf",
              "IPY_MODEL_4b0f2f9283494c5f8e9dfb789e259d70"
            ],
            "layout": "IPY_MODEL_d4e184e3514a43bfb531295c4199a74f"
          }
        },
        "612ec11a47304eb48d5ec4d1d290440c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_b1896489fc2b47f3976198add136cd2d",
            "placeholder": "​",
            "style": "IPY_MODEL_53199e69cc4b4de68c565ab7deab7671",
            "value": "Loading checkpoint shards: 100%"
          }
        },
        "c3a3551681cf44aa864cc1844514e3cf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_d175b4d533e54e7bad50fbfe0b8deb46",
            "max": 4,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_667580e7dc924aec998c766532617144",
            "value": 4
          }
        },
        "4b0f2f9283494c5f8e9dfb789e259d70": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_5a52f286fa464d5aae8fedbed808d45b",
            "placeholder": "​",
            "style": "IPY_MODEL_cdd8fdb9f652439988574c3db236f744",
            "value": " 4/4 [00:01&lt;00:00,  2.95it/s]"
          }
        },
        "d4e184e3514a43bfb531295c4199a74f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b1896489fc2b47f3976198add136cd2d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "53199e69cc4b4de68c565ab7deab7671": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "d175b4d533e54e7bad50fbfe0b8deb46": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "667580e7dc924aec998c766532617144": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "5a52f286fa464d5aae8fedbed808d45b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cdd8fdb9f652439988574c3db236f744": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
